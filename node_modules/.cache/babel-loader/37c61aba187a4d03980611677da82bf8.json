{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Users/krunalmehta/React Proj/netflixclonebykrun/netflixclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar path = require('path');\n\nvar pathExists = require('path-exists');\n\nvar pLocate = require('p-locate');\n\nmodule.exports = function (iterable, options) {\n  options = Object.assign({\n    cwd: process.cwd()\n  }, options);\n  return pLocate(iterable, function (el) {\n    return pathExists(path.resolve(options.cwd, el));\n  }, options);\n};\n\nmodule.exports.sync = function (iterable, options) {\n  options = Object.assign({\n    cwd: process.cwd()\n  }, options);\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var el = _step.value;\n\n      if (pathExists.sync(path.resolve(options.cwd, el))) {\n        return el;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};","map":{"version":3,"sources":["/Users/krunalmehta/React Proj/netflixclonebykrun/netflixclone/node_modules/locate-path/index.js"],"names":["path","require","pathExists","pLocate","module","exports","iterable","options","Object","assign","cwd","process","el","resolve","sync"],"mappings":"AAAA;;;;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAvB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAACC,QAAD,EAAWC,OAAX,EAAuB;AACvCA,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AACvBC,IAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR;AADkB,GAAd,EAEPH,OAFO,CAAV;AAIA,SAAOJ,OAAO,CAACG,QAAD,EAAW,UAAAM,EAAE;AAAA,WAAIV,UAAU,CAACF,IAAI,CAACa,OAAL,CAAaN,OAAO,CAACG,GAArB,EAA0BE,EAA1B,CAAD,CAAd;AAAA,GAAb,EAA4DL,OAA5D,CAAd;AACA,CAND;;AAQAH,MAAM,CAACC,OAAP,CAAeS,IAAf,GAAsB,UAACR,QAAD,EAAWC,OAAX,EAAuB;AAC5CA,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AACvBC,IAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR;AADkB,GAAd,EAEPH,OAFO,CAAV;;AAD4C,6CAK3BD,QAL2B;AAAA;;AAAA;AAK5C,wDAA2B;AAAA,UAAhBM,EAAgB;;AAC1B,UAAIV,UAAU,CAACY,IAAX,CAAgBd,IAAI,CAACa,OAAL,CAAaN,OAAO,CAACG,GAArB,EAA0BE,EAA1B,CAAhB,CAAJ,EAAoD;AACnD,eAAOA,EAAP;AACA;AACD;AAT2C;AAAA;AAAA;AAAA;AAAA;AAU5C,CAVD","sourcesContent":["'use strict';\nconst path = require('path');\nconst pathExists = require('path-exists');\nconst pLocate = require('p-locate');\n\nmodule.exports = (iterable, options) => {\n\toptions = Object.assign({\n\t\tcwd: process.cwd()\n\t}, options);\n\n\treturn pLocate(iterable, el => pathExists(path.resolve(options.cwd, el)), options);\n};\n\nmodule.exports.sync = (iterable, options) => {\n\toptions = Object.assign({\n\t\tcwd: process.cwd()\n\t}, options);\n\n\tfor (const el of iterable) {\n\t\tif (pathExists.sync(path.resolve(options.cwd, el))) {\n\t\t\treturn el;\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}